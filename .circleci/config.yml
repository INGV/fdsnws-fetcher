version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: vlauciani/fdsnws-fetcher
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  start:
    docker:
      - image: debian:stretch
    steps:
      - run:
          name: Date start
          command: date
  build-latest:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build docker image
          command: |
            docker build --no-cache --pull --tag $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  build-tag:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Checkout tag version
          command: |
            git checkout ${CIRCLE_TAG}
      - run:
          name: Build docker image
          command: |
            IMAGE_TAG=${CIRCLE_TAG/v/''}
            docker build --no-cache --pull --tag $IMAGE_NAME:$IMAGE_TAG .
      - run:
          name: Archive Docker image
          command: docker save -o image_tag.tar $IMAGE_NAME:$IMAGE_TAG
      - persist_to_workspace:
          root: .
          paths:
            - ./image_tag.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo $DOCKERHUB_ACCESS_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $IMAGE_NAME:latest
  publish-tag:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image_tag.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo $DOCKERHUB_ACCESS_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin
            IMAGE_TAG=${CIRCLE_TAG/v/''}
            docker tag $IMAGE_NAME $IMAGE_NAME:$IMAGE_TAG
            docker push $IMAGE_NAME:$IMAGE_TAG
  end:
    docker:
      - image: debian:stretch
    steps:
      - run:
          name: Date end
          command: date

  test_publiccode:
    docker:
      - image: docker:18.06.0-ce
    steps:
      - checkout
      - setup_remote_docker
      - run:
          # https://github.com/italia/publiccode-parser-go
          name: Validate publiccode file
          command: |
            ### CircleCI cannot mount folder: https://circleci.com/docs/2.0/building-docker-images/#mounting-folders
            # create a dummy container which will hold a volume with config
            docker create -v /publiccode_folder --name myfolder alpine:3.4 /bin/true
            # copy a config file into this volume
            docker cp publiccode.yml myfolder:/publiccode_folder
            # start an application container using this volume
            docker run --rm --volumes-from myfolder italia/publiccode-parser-go publiccode_folder/publiccode.yml

workflows:
  version: 2.1
  fdsnws-fetcher-workflow:
    jobs:
      - start:
          filters:
            tags:
              only: /^v.*/
      - build-latest:
          requires:
            - start
          filters:
            tags:
              only: master
      - build-tag:
          requires:
            - start
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - test_publiccode:
          requires:
            - start            
          filters:
            tags:
              only: /^v.*/
      - publish-latest:
          context: 
            - valentino
          requires:
            - build-latest
          filters:
            tags:
              only: master
      - publish-tag:
          context:
            - valentino
          requires:
            - build-tag
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - end:
          requires:
            - publish-latest
            - publish-tag
          filters:
            tags:
              only: /^v.*/
